services:
  app:
    container_name: gixer-app
    build:
      context: ./docker/app
      args:
        UID: ${APP_UID:-33}
        GID: ${APP_GID:-33}
    volumes:
      - .:/var/www
    networks:
      - gixer
  nginx:
    image: nginx:stable
    volumes:
      - ./public:/var/www/public
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - gixer
  rabbitmq:
    container_name: gixer-rabbitmq
    image: rabbitmq:4.1-management-alpine
    command: rabbitmq-server
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-app}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-password}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-gixer}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - ${RABBITMQ_MGM_PORT:-15672}:15672
    networks:
      - gixer
  database:
    container_name: gixer-database
    image: timescale/timescaledb:latest-pg16
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - gixer

volumes:
  database_data:
  rabbitmq_data:
networks:
  gixer:
    driver: bridge
